# 모듈 불러오기 공부 : https://dojang.io/mod/page/view.php?id=2447

# ● 모듈과 패키지(module, package)
    # 1. 개념
        # 1) 모듈 : 각종 변수, 함수, 클래스 담은 스크립트 파일
        # 1) 패키지 : 여러 모듈을 묶은 것
    # 2. 특징
        # - 기본 모듈과 패키지 : 파이썬 설치 시, 다양한 모듈과 패키지가 기본으로 설치
        # - 사용자 지정 모듈과 패키지 : 기본 모듈과 패키지가 부족하면, 다른 사람들이 만든 유명 모듈과 패키지 설치해서 사용

        # - 모듈 : 간단한 기능 담을 때 사용
        # - 패키지 : 코드 많고 복잡할 때 사용. 여러개의 모듈로 구성. 관련된 모듈끼리 폴더에 모여있는 형태
    # 3. 작성방법
        # 1) 모듈 만들기
            # - make_module.png 참조
            # (1) 모듈명.py 생성 in 1개의 프로젝트 폴더
            # (2) 변수, 함수, 클래스 정의
        # 2) 모듈 사용
            # (1) 다른 파이썬 파일 생성 in 1개의 프로젝트 폴더
            # (2) 모듈 불러오기 : 11_import_module_package 참조
            # (3) 모듈 사용 : 11_import_module_package 참조 + 12_make_module_package 폴더 내의 파일들 전부 참조

        # 3) 모듈의 시작점
            # - 파이썬 : 시작점인 스크립트 파일과, 모듈의 차이 없음
            # - __name__ 변수 : 현재 스크립트 파일이 시작점인지, 모듈인지 판단을 위함
                # 1] 모듈로서 파일 실행한 경우 : __name__ = 모듈명 저장
                # 2] 메인으로서 파일 실행한 경우 : __main__ = __main__ 저장

            # (1) 프로그램의 시작점 vs 모듈 판단하여 코드 실행
                # 어떤 경우든 실행할 코드
                # if __name__ == '__main__':
                    # __main__인 경우만 실행할 코드

        # 1) 패키지 만들기
            # - make_package.png 참조
            # (1) 임의 패키지 폴더 생성 in 1개의 프로젝트 폴더
            # (2) __init__.py 생성
            # (2) 모듈명.py 필요한 만큼 생성
            # (2) 변수, 함수, 클래스 정의
        # 2) 패키지 사용
            # (1) 다른 파이썬 파일 생성 in 1개의 프로젝트 폴더
            # (2) 패키지 불러오기 : 11_import_module_package 참조
            # (3) 패키지 사용 : 11_import_module_package 참조 + 12_make_module_package 폴더 내의 파일들 전부 참조